% Problem 1742. Generate a Parasitic Number
% Created by James
% This problem is the next step up from Problem 156. Rather than 
% determining if an input is a parasitic number, you will be asked to 
% generate one. You will be given the last digit of the number (k), and the 
% number you're using to multiply to shift the parasitic number one digit 
% (n). Both n and k will always be between 1 and 9.
% 
% For example, if n=4 and k=7:
% 
%     4x7=2*8*
%     4x87=3*48*
%     4x487=1*948*
%     4x9487=3*7948*
%     4x79487=3*17948*
%     4x179487=717948.
% So 179487 is a 4-parasitic number with units digit 7.
% 
% We are looking for the smallest possible number that meets these criteria, 
% so while 179487, 179487179487, and 179487179487179487 are all valid 
% answers for n=4 and k=7, the correct output for this function is 179487.
% 
% Because some of the values that are generated by this function are very 
% large, the output should be a string rather than an integer. Please bear 
% in mind that some of these values will have leading zeros. This will 
% occur when n>k.

function y = generate_parasitic(k, n)

import java.math.*
char(java.math.BigDecimal(k).divide(java.math.BigDecimal(10 * n - 1), 1000, java.math.RoundingMode.HALF_EVEN));

i = 3;
while ~strcmp(ans(3:i), ans(i + 1 : 2 * i - 2 ))
    i = i + 1;
end

y = ans(3:i);

end
